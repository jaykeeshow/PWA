{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","containerStyle","backgroundImage","backgroundSize","backgroundPosition","height","display","justifyContent","alignItems","flexDirection","App","useState","setQuery","weather","setWeather","search","e","key","className","style","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"kMAKaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACHC,IAAMC,IAJnB,kDAI4B,CACpCC,OAAQ,CACNC,EAAGL,EACHM,MAAO,SACPC,MAPU,sCAEY,uBAClBC,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,sD,eCDnBC,EAAiB,CACrBC,gBAAiB,0BACjBC,eAAgB,QAChBC,mBAAoB,SACpBC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,UA+CFC,EA7CH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTnB,EADS,KACFoB,EADE,OAEcD,mBAAS,IAFvB,mBAETE,EAFS,KAEAC,EAFA,KAIVC,EAAM,uCAAG,WAAOC,GAAP,eAAAvB,EAAA,yDACC,UAAVuB,EAAEC,IADO,gCAEQ1B,EAAaC,GAFrB,OAELQ,EAFK,OAGXc,EAAWd,GACXY,EAAS,IAJE,2CAAH,sDAOZ,OACE,sBAAKM,UAAU,iBAAiBC,MAAOlB,EAAvC,UACE,uBACEmB,KAAK,OACLF,UAAU,SACVG,YAAY,YACZC,MAAO9B,EACP+B,SAAU,SAACP,GAAD,OAAOJ,EAASI,EAAEQ,OAAOF,QACnCG,WAAYV,IAEbF,EAAQa,MACP,sBAAKR,UAAU,OAAf,UACE,qBAAIA,UAAU,YAAd,UACE,+BAAOL,EAAQc,OACf,8BAAMd,EAAQe,IAAIC,aAEpB,sBAAKX,UAAU,YAAf,UACGY,KAAKC,MAAMlB,EAAQa,KAAKM,MACzB,2CAEF,sBAAKd,UAAU,OAAf,UACE,qBACEA,UAAU,YACVe,IAAG,2CAAsCpB,EAAQA,QAAQ,GAAGqB,KAAzD,WACHC,IAAKtB,EAAQA,QAAQ,GAAGuB,cAE1B,4BAAIvB,EAAQA,QAAQ,GAAGuB,wBC/CnCC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.effb562c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\nconst API_KEY = \"1749be543c64a25b1f93acde790ca5ed\";\n\nexport const fetchWeather = async (query) => {\n  const { data } = await axios.get(URL, {\n    params: {\n      q: query,\n      units: \"metric\",\n      APPID: API_KEY,\n    },\n  });\n  return data\n};\n","import React, { useState } from \"react\";\nimport { fetchWeather } from \"./api/fetchWeather\";\nimport \"./App.css\";\n\nconst containerStyle = {\n  backgroundImage: \"url(images/image1.jpeg)\",\n  backgroundSize: \"cover\",\n  backgroundPosition: \"center\",\n  height: \"100%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n};\nconst App = () => {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = async (e) => {\n    if (e.key === \"Enter\") {\n      const data = await fetchWeather(query);\n      setWeather(data);\n      setQuery(\"\");\n    }\n  };\n  return (\n    <div className=\"main-container\" style={containerStyle}>\n      <input\n        type=\"text\"\n        className=\"search\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        onKeyPress={search}\n      />\n      {weather.main && (\n        <div className=\"city\">\n          <h2 className=\"city-name\">\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className=\"city-temp\">\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className=\"info\">\n            <img\n              className=\"city-icon\"\n              src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              alt={weather.weather[0].description}\n            />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}